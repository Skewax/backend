// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetNewLoginOKCode is the HTTP code returned for type GetNewLoginOK
const GetNewLoginOKCode int = 200

/*
GetNewLoginOK A successful login

swagger:response getNewLoginOK
*/
type GetNewLoginOK struct {

	/*
	  In: Body
	*/
	Payload *GetNewLoginOKBody `json:"body,omitempty"`
}

// NewGetNewLoginOK creates GetNewLoginOK with default headers values
func NewGetNewLoginOK() *GetNewLoginOK {

	return &GetNewLoginOK{}
}

// WithPayload adds the payload to the get new login o k response
func (o *GetNewLoginOK) WithPayload(payload *GetNewLoginOKBody) *GetNewLoginOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get new login o k response
func (o *GetNewLoginOK) SetPayload(payload *GetNewLoginOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNewLoginOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNewLoginBadRequestCode is the HTTP code returned for type GetNewLoginBadRequest
const GetNewLoginBadRequestCode int = 400

/*
GetNewLoginBadRequest an incorrectly formatted ID

swagger:response getNewLoginBadRequest
*/
type GetNewLoginBadRequest struct {

	/*
	  In: Body
	*/
	Payload *GetNewLoginBadRequestBody `json:"body,omitempty"`
}

// NewGetNewLoginBadRequest creates GetNewLoginBadRequest with default headers values
func NewGetNewLoginBadRequest() *GetNewLoginBadRequest {

	return &GetNewLoginBadRequest{}
}

// WithPayload adds the payload to the get new login bad request response
func (o *GetNewLoginBadRequest) WithPayload(payload *GetNewLoginBadRequestBody) *GetNewLoginBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get new login bad request response
func (o *GetNewLoginBadRequest) SetPayload(payload *GetNewLoginBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNewLoginBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNewLoginRequestTimeoutCode is the HTTP code returned for type GetNewLoginRequestTimeout
const GetNewLoginRequestTimeoutCode int = 408

/*
GetNewLoginRequestTimeout timeout of this ID

swagger:response getNewLoginRequestTimeout
*/
type GetNewLoginRequestTimeout struct {

	/*
	  In: Body
	*/
	Payload *GetNewLoginRequestTimeoutBody `json:"body,omitempty"`
}

// NewGetNewLoginRequestTimeout creates GetNewLoginRequestTimeout with default headers values
func NewGetNewLoginRequestTimeout() *GetNewLoginRequestTimeout {

	return &GetNewLoginRequestTimeout{}
}

// WithPayload adds the payload to the get new login request timeout response
func (o *GetNewLoginRequestTimeout) WithPayload(payload *GetNewLoginRequestTimeoutBody) *GetNewLoginRequestTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get new login request timeout response
func (o *GetNewLoginRequestTimeout) SetPayload(payload *GetNewLoginRequestTimeoutBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNewLoginRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(408)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNewLoginInternalServerErrorCode is the HTTP code returned for type GetNewLoginInternalServerError
const GetNewLoginInternalServerErrorCode int = 500

/*
GetNewLoginInternalServerError generic server error

swagger:response getNewLoginInternalServerError
*/
type GetNewLoginInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *GetNewLoginInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetNewLoginInternalServerError creates GetNewLoginInternalServerError with default headers values
func NewGetNewLoginInternalServerError() *GetNewLoginInternalServerError {

	return &GetNewLoginInternalServerError{}
}

// WithPayload adds the payload to the get new login internal server error response
func (o *GetNewLoginInternalServerError) WithPayload(payload *GetNewLoginInternalServerErrorBody) *GetNewLoginInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get new login internal server error response
func (o *GetNewLoginInternalServerError) SetPayload(payload *GetNewLoginInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNewLoginInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
